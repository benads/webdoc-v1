security:
    role_hierarchy:
        ROLE_ADMIN: ROLE_ADMIN
       
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        in_database: 
            entity: 
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern:   ^/
            anonymous: true
            provider: in_database

            guard:
                authenticators:
                    - App\Security\TokenAuthenticator


            form_login: 
                login_path: admin.connexion
                check_path: admin.connexion
                default_target_path: admin
                
            logout:
                path:       admin.logout
                target:     admin.connexion

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: /api/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
